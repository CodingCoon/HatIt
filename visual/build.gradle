plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'java-library'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}

repositories {
    mavenCentral()
}

javafx {
    version = "16"
    modules = [ 'javafx.controls', 'javafx.graphics']
}

dependencies {
    implementation project(':data')
    implementation project(':io')
}

java {
    modularity.inferModulePath = true
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(16))
    }
}

//sourceSets {
//    main {
//        java {
//            srcDirs = ['src/main/java']
//        }
//        resources {
//            srcDirs = ['src/main/resources']
//        }
//        output.resourcesDir = 'build/classes'
//    }
//}


//sourceSets {
//    main {
//        resources {
//            srcDirs = ['source/resources']
//        }
//    }
//}

project.afterEvaluate {
    println "visual source = " + sourceSets.main.resources.source
}

//final SourceSetOutput output = project.getConvention().findPlugin(JavaPluginConvention).sourceSets.getByName("main").getOutput();
//print("\nOUTPUT: " + output)
//final FileCollection classesDirs = output.getClassesDirs()
//if (classesDirs.size() == 1) {
//    print("\nCLASSES_DIR: " + classesDirs[0])
//    output.setResourcesDir(classesDirs[0]);
//}
//for (File file : classesDirs) {
//    print("\nF: " + file)
//}

application {
    mainModule.set('com.hatit.visual')
    mainClass.set('com.hatit.visual.Launcher')
}

project.configurations.implementation.setCanBeResolved(true)
